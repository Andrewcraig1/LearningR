library("KernSmooth", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("KernSmooth")
add2 <- function(x,y) {
x+y
}
add2(3+5)
add2(3,5)
f<-function(x) {
g<-function(y) {
y+z
}
z<-4
x+g(x)
}
z<-10
f<-function(x) {
g<-function(y) {
y+z
}
z<-10
x+g(x)
}
f(3)
z<-2
f(3)
x<-5
y<-if(x<3) {NA
}else{
10
}
y
f<-function(x){
g<-function(y){
y+z
}
z<-4
x+g(x)
}
f
f(3)
f<-function(x){
g<-function(y){
y+z
}
z<-10
x+g(x)
}
f(3)
f(3)
f<-function(x){
g<-function(y){
y+z
}
z<-10
x+g(x)
}
f(3)
get(wd)
getwd()
lst
ls()
cd()
clear()
file.path()
list.files
getwd
fileinfo()
file.info()
list.files
pwd
get.wd()
getwd()
list.dirs()
list.files
getwd(courseradatascience)
getwd(datasciencecoursera)
getwd(specdata)
swirl()
ElRancho_BookingNumbers_3 <- read.csv("~/Documents/ER/ElRancho_BookingNumbers_3.csv")
View(ElRancho_BookingNumbers_3)
rebooking <- read.csv("~/Documents/ER/ElRancho_BookingNumbers_3.csv")
View(rebooking)
head(rebooking)
table(rebooking$Group.Type)
plot(rebooking$Group.Type)
plot(rebooking$Group.Type,main='Bar chart of types of Groups',xlab='Group type',ylab='Frequency')
hist(rebooking$actualnumbers)
mean(rebooking$actualnumbers)
median(rebooking$actualnumbers)
mode(rebooking$actualnumbers)
mode(rebooking$actualnumbers)
sqrt(9)
sqrt(9)
sqrt(9)
median
?Mode
?Mode
sqrt(9)
sd(rebooking$actualnumbers)
x<-5
x+2
y<-x^2
y
sqrt(y)
myvariable<-c(72,28,12,11)
myvariable<-c(72,28,-9,12,11)
myvariable*3
sqrt(myvariable)
myvariable2<-myvariable*3
myvariable2
mean(myvariable)
length(myvariable)
sum(myvariable)
myvariable[2]
myvariable>0
myvariable[myvariable>0]
myvariable[myvariable==12]
myvariable[myvariable!=12]
x<-6+2
sqrt(x^2)
View(rebooking)
View(rebooking)
mean(rebooking$Nights)
sd(rebooking$Nights)
table(rebooking$Nights_freq)
table(rebooking$Booking.Type_freq)
table(rebooking$Lead.Source_freq)
plot(rebooking$Lead.Source)
table(rebooking$Lead.Source)
?table of extent 0 >
count(rebooking$Lead.Source)
count.fields(rebooking$Lead.Source)
cou
bookings<-2556
1364/bookings
table(rebooking$Group.Type)
402/bookings
1679/bookings
table(rebooking$actualnumbers_freq)
table(rebooking$actualnumbers)
1647/bookings
ERBooking <- read.csv("~/Documents/ER/ElRancho_BookingNumbers_3 - cleaned.csv")
View(ERBooking)
### AUC
# AUC accuracy
library(ROCR)
rm(TestPrediction)
loans <- read.csv("~/Documents/MOOCs/Analytics Edge/Unit 3/Data/loans_imputed.csv", header=FALSE)
View(loans)
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
loansTrain<-subset(loans,split==TRUE)
loansTest<-subset(loans,split==FALSE)
nrow(loansTrain)
nrow(loansTest)
## Training model
loansnfpLog1<-glm(not.fully.paid~ .,data=loansTrain, family = "binomial")
summary(loansnfpLog1)
#Prob 2.2 Consider two loan applications, which are identical other than the fact that the borrower
#in Application A has FICO credit score 700 while the borrower in Application B has FICO credit score 710.
logOddsA<-(( 9.187)+(0.3368)+( 0.8867192)+(-6.141e-01)+(-3.212e-01 )+(1.347e-01)+
(1.727e-01)+(-4.830e-01)+(4.120e-01)+( 6.110e-01)+1.275e-03 +
-4.337e-01+4.638e-03+(-9.317e-03*700)+2.371e-06+ 3.085e-06+
1.839e-03+8.437e-02+-8.320e-02+3.300e-01)
logOddsA
logOddsB<-(( 9.187)+(0.3368)+( 0.8867192)+(-6.141e-01)+(-3.212e-01 )+(1.347e-01)+
(1.727e-01)+(-4.830e-01)+(4.120e-01)+( 6.110e-01)+1.275e-03 +
-4.337e-01+4.638e-03+(-9.317e-03*710)+2.371e-06+ 3.085e-06+
1.839e-03+8.437e-02+-8.320e-02+3.300e-01)
logOddsB
logOddsA-logOddsB
oddsA<-exp(logOddsA)
oddsA
oddsB<-exp(logOddsB)
oddsB
oddsA/oddsB
# Prob 2.3
# Predict with test data
predicted.risk<- predict(loansnfpLog1, newdata=loansTest, type="response")
summary(predicted.risk)
table(loansTest$not.fully.paid, predicted.risk ==0.5)
#accuracy
(2413+0)/nrow(loansTest)
#baseline model
table(loansTest$not.fully.paid)
(2413)/nrow(loansTest)
### AUC
# AUC accuracy
library(ROCR)
rm(TestPrediction)
#Prob 3.1 "Smart Baseline"
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
loansTrain<-subset(loans,split==TRUE)
loansTest<-subset(loans,split==FALSE)
nrow(loansTrain)
nrow(loansTest)
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
library(mice)
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
loansTrain<-subset(loans,split==TRUE)
loansTest<-subset(loans,split==FALSE)
setwd("~/Documents/MOOCs/Analytics Edge/Unit 3")
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
library(caTools)
library(caTools)
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
loansTrain<-subset(loans,split==TRUE)
loansTest<-subset(loans,split==FALSE)
library(caTools)
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
library(caTools)
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
split<-sample.split(loans$not.fully.paid, SplitRatio == 0.70)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
split<-sample.split(loans$not.fully.paid, SplitRatio =0.70)
split<-sample.split(loans$not.fully.paid, SplitRatio =0.7)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.7)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
names(loans)
rm(loans)
loans <- read.csv("~/Documents/MOOCs/Analytics Edge/Unit 3/Data/loans_imputed.csv")
View(loans)
library(caTools)
set.seed(144)
split<-sample.split(loans$not.fully.paid, SplitRatio = 0.70)
loansTrain<-subset(loans,split==TRUE)
loansTest<-subset(loans,split==FALSE)
nrow(loansTrain)
nrow(loansTest)
## Training model
loansnfpLog1<-glm(not.fully.paid~ .,data=loansTrain, family = "binomial")
summary(loansnfpLog1)
#Prob 2.2 Consider two loan applications, which are identical other than the fact that the borrower
#in Application A has FICO credit score 700 while the borrower in Application B has FICO credit score 710.
logOddsA<-(( 9.187)+(0.3368)+( 0.8867192)+(-6.141e-01)+(-3.212e-01 )+(1.347e-01)+
(1.727e-01)+(-4.830e-01)+(4.120e-01)+( 6.110e-01)+1.275e-03 +
-4.337e-01+4.638e-03+(-9.317e-03*700)+2.371e-06+ 3.085e-06+
1.839e-03+8.437e-02+-8.320e-02+3.300e-01)
logOddsA
logOddsB<-(( 9.187)+(0.3368)+( 0.8867192)+(-6.141e-01)+(-3.212e-01 )+(1.347e-01)+
(1.727e-01)+(-4.830e-01)+(4.120e-01)+( 6.110e-01)+1.275e-03 +
-4.337e-01+4.638e-03+(-9.317e-03*710)+2.371e-06+ 3.085e-06+
1.839e-03+8.437e-02+-8.320e-02+3.300e-01)
logOddsB
logOddsA-logOddsB
oddsA<-exp(logOddsA)
oddsA
oddsB<-exp(logOddsB)
oddsB
oddsA/oddsB
# Prob 2.3
# Predict with test data
predicted.risk<- predict(loansnfpLog1, newdata=loansTest, type="response")
summary(predicted.risk)
table(loansTest$not.fully.paid, predicted.risk ==0.5)
#accuracy
(2413+0)/nrow(loansTest)
#baseline model
table(loansTest$not.fully.paid)
(2413)/nrow(loansTest)
### AUC
# AUC accuracy
library(ROCR)
rm(TestPrediction)
ROCRpred<-prediction(predicted.risk,loansTest$not.fully.paid)
as.numeric(performance(ROCRpred, "auc")@y.values)
source('~/Documents/MOOCs/Analytics Edge/Unit 3/U3 Assign 3 Loan Repayment.R')
names(loans)
loansnfpLog2<-glm(not.fully.paid~ int.rate,data=loansTrain, family = "binomial")
summary(loansnfpLog2)
loansnfpLog1<-glm(not.fully.paid~ .,data=loansTrain, family = "binomial")
summary(loansnfpLog1)
corr(loansTrain)
cor(loansTrain)
cor(loansTest$int.rate,)
cor(loansTest$int.rate,loansTest$installment)
loansnfpLog2<-glm(not.fully.paid~ int.rate,data=loansTrain, family = "binomial")
summary(loansnfpLog2)
loansnfpLog2<-glm(not.fully.paid~ int.rate, data=loansTrain, family = "binomial")
summary(loansnfpLog2)
loansnfpLog1<-glm(not.fully.paid~ .,data=loansTrain, family = "binomial")
summary(loansnfpLog1)
loansnfpLog2<-glm(not.fully.paid~ int.rate, data=loansTrain, family = "binomial")
summary(loansnfpLog2)
max(loansTrain$int.rate)
which.max(0.2164)
View(loansTrain)
which.max(loansTrain$int.rate)
logOddsC<-(-3.6726)+(15.9214*0.2164)
P<-1/(1+exp(-logOddsC))
P
TestPrediction = predict(loansnfpLog2, newdata=loansTest, type="response")
summary(TestPrediction)
table(loansTest$not.fully.paid, TestPrediction >= 0.5)
table(loansTest$not.fully.paid, TestPrediction = 0.5)
table(loansTest$not.fully.paid, TestPrediction == 0.5)
ROCRpred<-prediction(TestPrediction,loansTest$not.fully.paid)
as.numeric(performance(ROCRpred, "auc")@y.values)
10*exp(0.06*3)
10*exp(0.06*3)-10
loansTest$profit<-1*exp(loansTest$int.rate*3)-1
View(loansTest)
loansTest$profit<-exp(loansTest$int.rate*3)-1
loansTest$profit[loansTest$not.fully.paid==1]<--1
max(loansTest$profit)
highinterest<-subset(loansTest,int.rate>=0.15)
summary(highinterest)
mean(highinterest$profit)
10*exp(0.06*3)-10
View(highinterest)
table(highinterest$profit)
110/437
cutoff <- sort(highinterest$predicted.risk, decreasing=FALSE)[100]
# Predict with test data
predicted.risk<- predict(loansnfpLog1, newdata=loansTest, type="response")
summary(predicted.risk)
cutoff <- sort(highinterest$predicted.risk, decreasing=FALSE)[100]
loansnfpLog1<-glm(not.fully.paid~ .,data=loansTrain, family = "binomial")
predicted.risk<- predict(loansnfpLog1, newdata=loansTest, type="response")
cutoff <- sort(highinterest$predicted.risk, decreasing=FALSE)[100]
cutoff<-sort(highinterest$predicted.risk, decreasing=FALSE)[100]
loansTest$predicted.risk<-predicted.risk
cutoff<-sort(highinterest$predicted.risk, decreasing=FALSE)[100]
highinterest<-subset(loansTest,int.rate>=0.15)
cutoff<-sort(highinterest$predicted.risk, decreasing=FALSE)[100]
cutoff
selectedLoans<-subset(highinterest,predicted.risk<=cutoff)
summary(selectedLoans$profit)
sum(selectedLoans$profit)
table(selectedLoans$not.fully.paid)
source('~/Documents/MOOCs/Analytics Edge/Unit 3/U3 Assign 3 Loan Repayment.R')
source('~/Documents/MOOCs/Analytics Edge/Unit 3/U3 Assign 3 Loan Repayment.R')
